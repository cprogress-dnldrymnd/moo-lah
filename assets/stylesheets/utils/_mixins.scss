
// -----------------------------------------------------------------------------
// This file contains all application-wide Sass mixins.
// -----------------------------------------------------------------------------

/// Event wrapper
/// @author Harry Roberts
/// @param {Bool} $self [false] - Whether or not to include current selector
/// @link https://twitter.com/csswizardry/status/478938530342006784 Original tweet from Harry Roberts
@mixin on-event($self: false) {
    @if $self {
        &,
        &:hover,
        &:active,
        &:focus {
            @content;
        }
    }
    @else {
        &:hover,
        &:active,
        &:focus {
            @content;
        }
    }
}

/// Make a context based selector a little more friendly
/// @author Hugo Giraudel
/// @param {String} $context
@mixin when-inside($context) {
    #{$context} & {
        @content;
    }
}


@mixin font-face($fontFamily, $path, $fileName, $fontStyle: normal, $fontWeight:false) {

    @each $name, $weight in $fontWeight {
        @font-face {
            font-family: $fontFamily;
            src: url('#{$path + $fileName}-#{$name}.eot');
            src: url('#{$path + $fileName}-#{$name}.eot?#iefix') format('embedded-opentype'),
            url('#{$path + $fileName}-#{$name}.woff2') format('woff2'),
            url('#{$path + $fileName}-#{$name}.woff') format('woff'),
            url('#{$path + $fileName}-#{$name}.ttf') format('truetype'),
            url('#{$path + $fileName}-#{$name}.svg##{$fileName}-#{$name}') format('svg');

            font-weight: $weight;
            font-style: $fontStyle;
            font-display: swap;
        }
    }
}
@mixin respond-to($breakpoint) {
    @if $breakpoint == "xxxs" {
        @media screen and (max-width: 360px) {
            @content;
        }
    }
    @if $breakpoint == "xxs" {
        @media screen and (max-width: 480px) {
            @content;
        }
    }
    @if $breakpoint == "mobile" {
        @media screen and (max-width: 575px) {
            @content;
        }
    }

    @if $breakpoint == "mobile-xs" {
        @media (min-width: 576px) and (max-width: 767px) {
            @content;
        }
    }

    @if $breakpoint == "mobile-sm" {
        @media (min-width: 576px) and (max-width: 991px) {
            @content;
        }
    }

    @if $breakpoint == "mobile-md" {
        @media (min-width: 576px) and (max-width: 1199px){
            @content;
        }
    }

    @if $breakpoint == "mobile-lg" {
        @media (min-width: 576px) {
            @content;
        }
    }


    @if $breakpoint == "xs" {
        @media screen and (max-width: 767px) {
            @content;
        }
    }

    @if $breakpoint == "xs-sm" {
        @media screen and (max-width: 991px) {
            @content;
        }
    }

    @if $breakpoint == "xs-md" {
        @media screen and (max-width: 1199px) {
            @content;
        }
    }

    @if $breakpoint == "sm" {
        @media (min-width: 768px) and (max-width: 991px) {
            @content;
        }
    }

    

    @if $breakpoint == "sm-lg" {
        @media (min-width: 768px) {
            @content;
        }
    }

    @if $breakpoint == "sm-md" {
        @media (min-width: 768px) and (max-width: 1199px) {
            @content;
        }
    }

    @if $breakpoint == "md" {
        @media (min-width: 992px) and (max-width: 1199px) {
            @content;
        }
    }

    @if $breakpoint == "md-lg" {
        @media screen and (min-width: 992px)  {
            @content;
        }
    }

    @if $breakpoint == "lg" {
        @media screen and (min-width: 1200px) {
            @content;
        }
    }


    @if $breakpoint == "small-lg" {
        @media (min-width: 1200px) and (max-width: 1439px) {
            @content;
        }
    }

    @if $breakpoint == "xs-lg" {
        @media screen and (max-width: 1439px) {
            @content;
        }
    }

    @if $breakpoint == "lg-lg" {
        @media screen and (min-width: 1440px) {
            @content;
        }
    }
}

@mixin background-image($position:center, $size:cover, $repeat:no-repeat) {
    background-position: $position;
    background-size: $size;
    background-repeat: $repeat;
}

@mixin display-flex {
    display: -webkit-box; 
    display: -moz-box;
    display: -ms-flexbox;
    display: -webkit-flex; 
    display: flex;
}
@mixin inline-flex {
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
}

@mixin align-items($align) {
    -webkit-box-align: $align;
    -moz-box-align: $align;
    -ms-flex-align: $align;
    -webkit-align-items: $align;
    align-items: $align;
}

@mixin transform($transform) {
    -webkit-transform: $transform;
    -moz-transform: $transform;
    -ms-transform: $transform;
    -o-transform: $transform;
    transform: $transform;
}
@mixin justify-content($justify_content) {
    -webkit-justify-content: $justify_content ;
    -ms-flex-pack: $justify_content;
    justify-content: $justify_content;
}
@mixin transition($transition: 300ms) {
    -webkit-transition: $transition;
    -moz-transition: $transition;
    -ms-transition: $transition;
    -o-transition: $transition;
    transition: $transition;
}

@mixin box-shadow($shadow:  0px 0px 7px 0px rgba(0,0,0,0.75)) {
    -webkit-box-shadow: $shadow;
    -moz-box-shadow: $shadow;
    box-shadow: $shadow;
}

@mixin filter($filter) {
    -webkit-filter: $filter;
    filter: $filter;
}
@mixin order($order) {
    -webkit-box-ordinal-group: $order;
    -moz-box-ordinal-group: $order;
    -ms-flex-order: $order; 
    -webkit-order: $order; 
    order: $order;
}
@mixin before {
    &:before {
        @content;
    }
}
@mixin after {
    &:after {
        @content;
    }
}

@mixin image-fit {
    @include height-width;
    object-fit: cover;
    object-position: center;
}
@mixin button {
    > a, > span, > button, > input[type='submit'] { 
        @content;
    }
}
@mixin button-style {
    @include inline-flex;
    @include align-items(center);
    @include transition(300ms);
    border-radius: 5px;
    padding: 1.125rem 1.75rem;
    font-weight: bold;
    font-size: 1.25rem;
    outline: none;
    border: none;
}


@mixin padding-top-bottom($padding) {
    padding-top: $padding;
    padding-bottom: $padding;
}
@mixin padding-left-right($padding) {
    padding-left: $padding;
    padding-right: $padding;
}
@mixin margin-top-bottom($margin) {
    margin-top: $margin;
    margin-bottom: $margin;
}
@mixin margin-left-right($margin) {
    margin-left: $margin;
    margin-right: $margin;
}
@mixin absolute-corner {
    position: absolute;
    left: 0;
    top: 0;
    right: 0;
    bottom: 0;
}
@mixin centered {
    @include display-flex;
    @include align-items(center);
    @include justify-content(center);
}
@mixin align-center {
    @include display-flex;
    @include align-items(center);
}
@mixin justify($justify: center, $flex: true) {
    @if ($flex) {
        @include display-flex;
    }
    @include justify-content($justify);
}
@mixin first-child {
    &:first-child {
        @content;
    }
}
@mixin last-child {
    &:last-child {
        @content;
    }
}
@mixin even {
    &:nth-child(even) {
        @content;
    }
}
@mixin odd {
    &:nth-child(odd) {
        @content;
    }
}
@mixin not-last-child {
    &:not(:last-child) {
        @content;
    }
}
@mixin headings {
    h1,h2,h3,h4,h5,h6 {
        @content;
    }
}